# Copyright 2024 The HuggingFace Inc. team. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[project.urls]
homepage = "https://github.com/huggingface/lerobot"
issues = "https://github.com/huggingface/lerobot/issues"
discord = "https://discord.gg/s3KuuzsPFb"

[project]
name = "lerobot"
version = "0.1.0"
description = "ðŸ¤— LeRobot: State-of-the-art Machine Learning for Real-World Robotics in Pytorch"
authors = [
    { name = "RÃ©mi CadÃ¨ne", email = "re.cadene@gmail.com" },
    { name = "Simon Alibert", email = "alibert.sim@gmail.com" },
    { name = "Alexander Soare", email = "alexander.soare159@gmail.com" },
    { name = "Quentin GallouÃ©dec", email = "quentin.gallouedec@ec-lyon.fr" },
    { name = "Adil Zouitine", email = "adilzouitinegm@gmail.com" },
    { name = "Thomas Wolf", email = "thomaswolfcontact@gmail.com" },
    { name = "Steven Palma", email = "imstevenpmwork@ieee.org" },
]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.10,<3.11"
keywords = ["robotics", "deep learning", "pytorch"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "cmake==4.1.0",
    "datasets==3.6.0",
    "deepdiff==8.6.0",
    "diffusers==0.35.1",
    "draccus==0.10.0",
    "einops==0.8.1",
    "flask==3.1.2",
    "gdown==5.2.0",
    "gymnasium==0.29.1",
    "h5py==3.14.0",
    "huggingface-hub[hf-transfer,cli]==0.34.2 ; python_version < '4.0'",
    "imageio[ffmpeg]==2.37.0",
    "jsonlines==4.0.0",
    "numba==0.60.0",
    "omegaconf==2.4.0.dev3",
    "opencv-python-headless==4.11.0.86",
    "packaging>=25.0",
    "av==15.1.0",
    "pymunk==6.11.1",
    "pynput==1.8.1",
    "pyserial==3.5",
    "pyzmq==27.0.2",
    "rerun-sdk==0.23.1",
    "termcolor==3.1.0",
    "torch==2.5.1",
    # TODO(branyang02): torchcodec fails in curr docker due to ffmpeg issues.
    # "torchcodec>=0.2.1; sys_platform != 'win32' and (sys_platform != 'linux' or (platform_machine != 'aarch64' and platform_machine != 'arm64' and platform_machine != 'armv7l')) and (sys_platform != 'darwin' or platform_machine != 'x86_64')",
    "torchvision==0.20.1", # IsaacLab(v2.1.0, 3b6d615) requires torch==2.5.1 which requires torchvision==0.20.1
    "wandb==0.18.0",
    "zarr==3.0.0a5",
    "ruff==0.12.11",
    "protobuf==5.29.0",
]

[project.optional-dependencies]
aloha = ["gym-aloha>=0.1.1 ; python_version < '4.0'"]
dynamixel = ["dynamixel-sdk>=3.7.31"]
feetech = ["feetech-servo-sdk>=1.0.0"]
gamepad = ["pygame>=2.5.1", "hidapi>=0.14.0"]
hopejr = ["feetech-servo-sdk>=1.0.0", "pygame>=2.5.1"]
intelrealsense = [
    "pyrealsense2>=2.55.1.6486 ; sys_platform != 'darwin'",
    "pyrealsense2-macosx>=2.54 ; sys_platform == 'darwin'",
]
smolvla = ["transformers>=4.50.3", "num2words>=0.5.14", "accelerate>=1.7.0", "safetensors>=0.4.3"]
pusht = ["gym-pusht>=0.1.5 ; python_version < '4.0'"]
test = ["pytest>=8.1.0", "pytest-timeout>=2.4.0", "pytest-cov>=5.0.0", "pyserial>=3.5", "mock-serial>=0.0.1 ; sys_platform != 'win32'"]
umi = ["imagecodecs>=2024.1.1"]
video_benchmark = ["scikit-image>=0.23.2", "pandas>=2.2.2"]
xarm = ["gym-xarm>=0.1.1 ; python_version < '4.0'"]
async = ["grpcio==1.71.0", "matplotlib>=3.10.3"]
openpi = [
  "augmax>=0.3.4",
  "orbax-checkpoint==0.11.13",
  "flax==0.10.2",
  "beartype==0.19.0",
  "jax[cuda12]==0.5.3",
  "jaxtyping==0.2.36",
  "sentencepiece>=0.2.0",
  "tqdm-loggable>=0.2",
  "numpydantic>=1.6.6",
  "ml_collections==1.0.0",
  "gcsfs==2025.3.0",
]

[dependency-groups]
dev = [
  {include-group = "pi0"},
  {include-group = "maniskill"},
  {include-group = "isaaclab"},
  {include-group = "visualizer"},
  "ipykernel>=7.0.0a0",
]
pi0 = ["transformers==4.50.3", "pytest==8.4.1"] # we use inner functions in PaliGemma and it only works with transformer v4.50.3.
maniskill = ["mani_skill==3.0.0b21"]
# IsaacLab version: v2.1.0: https://github.com/isaac-sim/IsaacLab/tree/3b6d615f9aff7435fdafaa75a0d59365500a428c
# Requirements copied from: https://github.com/reeceomahoney/flow_planning/blob/main/pyproject.toml
isaaclab = [
  "isaacsim[all,extscache]==4.5.0",
  "isaaclab",
  "isaaclab_assets",
  "isaaclab_mimic",
  "isaaclab_rl[rsl-rl]",
  "isaaclab_rl[sb3]",
  "isaaclab_tasks",
  "minari[all]==0.5.3",
  "pyqt6==6.9.1",
  "diffusers==0.35.1",
  "pin==2.7.0",
  "example-robot-data==4.3.0",
  "pytorch-kinematics==0.7.5",
  "pillow==11.0.0",
  "tyro>=0.9.21",
  "mediapy==1.2.4",
  "numpy==1.26.4",
  "wandb==0.18.0"
]
visualizer = [
    "websockets>=15.0.1",
]

[tool.uv.sources]
isaacsim = { index = "nvidia" }
isaaclab = { path = "src/lerobot/envs/isaaclab/IsaacLab/source/isaaclab", editable = true }
isaaclab_assets = { path = "src/lerobot/envs/isaaclab/IsaacLab/source/isaaclab_assets", editable = true }
isaaclab_mimic = { path = "src/lerobot/envs/isaaclab/IsaacLab/source/isaaclab_mimic", editable = true }
isaaclab_rl = { path = "src/lerobot/envs/isaaclab/IsaacLab/source/isaaclab_rl", editable = true }
isaaclab_tasks = { path = "src/lerobot/envs/isaaclab/IsaacLab/source/isaaclab_tasks", editable = true }

[[tool.uv.index]]
name = "nvidia"
url = "https://pypi.nvidia.com"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu121"
url = "https://download.pytorch.org/whl/cu121"
explicit = true

[tool.ruff]
line-length = 110
target-version = "py310"
exclude = ["tests/artifacts/**/*.safetensors", "*_pb2.py", "*_pb2_grpc.py", "src/lerobot/envs/isaaclab/IsaacLab/"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "N", "B", "C4", "SIM"]
ignore = [
    "F722",   # Conflicts with array typing.
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.bandit]
exclude_dirs = [
    "tests",
    "benchmarks",
    "src/lerobot/datasets/push_dataset_to_hub",
    "src/lerobot/datasets/v2/convert_dataset_v1_to_v2",
    "src/lerobot/policies/pi0/conversion_scripts",
    "src/lerobot/scripts/push_dataset_to_hub.py",
]
skips = ["B101", "B311", "B404", "B603"]

[tool.typos]
default.extend-ignore-re = [
    "(?Rm)^.*(#|//)\\s*spellchecker:disable-line$",                      # spellchecker:disable-line
    "(?s)(#|//)\\s*spellchecker:off.*?\\n\\s*(#|//)\\s*spellchecker:on", # spellchecker:<on|off>
]
default.extend-ignore-identifiers-re = [
    # Add individual words here to ignore them
    "2nd",
    "pn",
    "ser",
    "ein",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
